# editorconfig.org
# Taken from corefx team's coding standards
# https://github.com/dotnet/corefx/blob/master/.editorconfig

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/formatting-rules

# top-most EditorConfig file
root = true

# Default settings:
# A newline ending every file
# Use 4 spaces as indentation
[*]
indent_style = space
indent_size = 4
trim_trailing_whitespace = true
insert_final_newline = true

[*.json]
indent_size = 4

# XML Configuration Files
[*.{xml,config,props,targets,nuspec,resx,ruleset,vsixmanifest,vsct}]
indent_size = 2

# C++ Files
[*.{cpp,h,in}]
curly_bracket_next_line = true
indent_brace_style = Allman

# Xml project files
[*.{csproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size = 2

# Xml build files
[*.builds]
indent_size = 2

# Xml files
[*.{xml,stylecop,resx,ruleset}]
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf
[*.{cmd, bat}]
end_of_line = crlf

# Feature files
[*.{feature,tt}]
end_of_line = crlf

# C# files
[*.cs]
end_of_line = crlf
csharp_prefer_braces                                                     = true

# New line preferences
csharp_new_line_before_open_brace                                        = none
csharp_new_line_before_else                                              = false
csharp_new_line_before_catch                                             = false
csharp_new_line_before_finally                                           = false
csharp_new_line_before_members_in_object_initializers                    = false
csharp_new_line_before_members_in_anonymous_types                        = false
csharp_new_line_within_query_expression_clauses                          = false

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# avoid this. unless absolutely necessary
dotnet_style_qualification_for_field                                     = false : suggestion
dotnet_style_qualification_for_property                                  = false : suggestion
dotnet_style_qualification_for_method                                    = false : suggestion
dotnet_style_qualification_for_event                                     = false : suggestion
dotnet_style_allow_multiple_blank_lines_experimental                     = false : silent
dotnet_style_namespace_match_folder 									 = true

# only use var when it's obvious what the variable type is
csharp_style_var_for_built_in_types                                      = false : none
csharp_style_var_when_type_is_apparent                                   = false : none
csharp_style_var_elsewhere                                               = false : none
csharp_style_namespace_declarations 									 = block_scoped

# use language keywords instead of BCL types
dotnet_style_predefined_type_for_locals_parameters_members               = true : suggestion
dotnet_style_predefined_type_for_member_access                           = true : suggestion

# name all constant fields using ALL_UPPER
dotnet_naming_rule.constant_fields_should_be_all_upper_case.severity     = suggestion
dotnet_naming_rule.constant_fields_should_be_all_upper_case.symbols      = constant_fields
dotnet_naming_rule.constant_fields_should_be_all_upper_case.style        = all_upper_style

dotnet_naming_symbols.constant_fields.applicable_kinds                   = field
dotnet_naming_symbols.constant_fields.required_modifiers                 = const

dotnet_naming_style.all_upper_style.word_separator                       = _
dotnet_naming_style.all_upper_style.capitalization                       = all_upper

# static fields should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity = suggestion
dotnet_naming_rule.static_fields_should_have_prefix.symbols  = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style    = static_prefix_style
dotnet_naming_symbols.static_fields.applicable_kinds   = field
dotnet_naming_symbols.static_fields.required_modifiers = static
dotnet_naming_symbols.static_fields.applicable_accessibilities = private, internal, private_protected
dotnet_naming_style.static_prefix_style.required_prefix = s_
dotnet_naming_style.static_prefix_style.capitalization = camel_case 

# internal and private fields should be camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity       = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols        = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style          = camel_case_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds           = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
#dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_style.capitalization                      = camel_case

# Code style defaults
csharp_using_directive_placement = outside_namespace:suggestion
dotnet_sort_system_directives_first                                      = true
dotnet_separate_import_directive_groups                                  = false
csharp_prefer_braces = true:refactoring
csharp_preserve_single_line_blocks                                       = true : none
csharp_preserve_single_line_statements                                   = false :none
csharp_prefer_static_local_function = true:suggestion
csharp_prefer_simple_using_statement = false:none
csharp_style_prefer_switch_expression = true:suggestion

# Code quality
dotnet_style_readonly_field = true:suggestion
dotnet_code_quality_unused_parameters = non_public:suggestion

# Expression-level preferences
dotnet_style_object_initializer                                          = true : suggestion
dotnet_style_collection_initializer                                      = true : suggestion
dotnet_style_explicit_tuple_names                                        = true : suggestion
dotnet_style_coalesce_expression                                         = true : suggestion
dotnet_style_null_propagation                                            = true : suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:refactoring
dotnet_style_prefer_conditional_expression_over_return = true:refactoring
csharp_prefer_simple_default_expression = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods                                   = false : none
csharp_style_expression_bodied_constructors                              = false : none
csharp_style_expression_bodied_operators                                 = false : none
csharp_style_expression_bodied_properties                                = true : none
csharp_style_expression_bodied_indexers                                  = true : none
csharp_style_expression_bodied_accessors                                 = true : none
csharp_style_expression_bodied_lambdas = true:refactoring
csharp_style_expression_bodied_local_functions = true:refactoring

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check                    = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check                    = true : suggestion
csharp_style_inlined_variable_declaration                                = true : suggestion

# Null checking preferences
csharp_style_throw_expression                                            = true : suggestion
csharp_style_conditional_delegate_call                                   = true : suggestion

# Other features
csharp_style_prefer_index_operator = false:none
csharp_style_prefer_range_operator = false:none
csharp_style_pattern_local_over_anonymous_function = false:none

# Space preferences
csharp_space_after_cast                                                  = false
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_after_comma                                                 = true
csharp_space_after_dot                                                   = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_after_semicolon_in_for_statement                            = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_around_declaration_statements                               = do_not_ignore
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_space_before_comma                                                = false
csharp_space_before_dot                                                  = false
csharp_space_before_open_square_brackets                                 = false
csharp_space_before_semicolon_in_for_statement                           = false
csharp_space_between_empty_square_brackets                               = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_parameter_list_parentheses              = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis        = false
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_parentheses                                         = false
csharp_space_between_square_brackets                                     = false

# Analyzers
dotnet_code_quality.ca1802.api_surface = private, internal

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity                                       = none

dotnet_diagnostic.xUnit2014.severity                                    =suggestion
dotnet_diagnostic.xUnit2016.severity                                    =suggestion
dotnet_diagnostic._MissingConfigureAwait.severity                       =suggestion
dotnet_diagnostic._MissingAsync.severity                                =suggestion
dotnet_diagnostic._SuperfluousAsync.severity                            =suggestion
dotnet_diagnostic.MVC1004.severity                                      =suggestion
# S1135: Track uses of "TODO" tags
#dotnet_diagnostic.S1135.severity = warning

# IDE0063: Use simple 'using' statement
csharp_prefer_simple_using_statement = false : none

# IDE0090: Use 'new(...)'
dotnet_diagnostic.IDE0090.severity = none

# Do not use element access when expression is invocation
roslynator.RCS1246.suppress_when_expression_is_invocation.serverity = none
roslynator.RCS1246.suppress_when_expression_is_invocation = true

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = none

# VC0000: Generate a constructor that takes a System.Data.DataRow
dotnet_diagnostic.VC0000.severity = none

# RCS1021: Convert lambda expression body to expression body.
dotnet_diagnostic.RCS1021.severity = none

# PH_P013: Discouraged EntityFramework Method
dotnet_diagnostic.PH_P013.severity = none
